K-medoids란?
#──────────────────────────────────────────────────────────────────────────────────────────
K-medoids는 K-means와 유사한 군집분석 방법이지만,
대표점(centroid) 대신 실제 데이터 중 하나를 중심(medoid) 으로 선택한다는 점이 다릅니다.
#──────────────────────────────────────────────────────────────────────────────────────────

특징
#──────────────────────────────────────────────────────────────────────────────────────────
K-means는 중심점이 데이터의 평균(가상점)이라 이상치(Outlier)에 민감하지만,
K-medoids는 실제 데이터 중 대표값을 중심으로 하므로 이상치에 강함.
비유클리드 거리(metric) 도 사용할 수 있음 (예: Manhattan 거리, cosine 등).
주로 소규모~중간 규모 데이터셋에 적합.
#──────────────────────────────────────────────────────────────────────────────────────────

# 패키지 설치
install.packages("cluster")

# 패키지 불러오기
library(cluster)

# 예시 데이터 (iris의 숫자형 변수만 사용)
data <- iris[, 1:4]
#──────────────────────────────────────────────────────────────────────────────────────────
#몇 개의 군집으로 나누는 게 가장 적절한가?

#1. 실루엣 계수 (Silhouette Coefficient)
sil_width <- c()
for (k in 2:10) {
  pam_fit <- pam(data, k)
  sil_width[k] <- pam_fit$silinfo$avg.width
}

plot(2:10, sil_width[2:10], type = "b",
     xlab = "Number of clusters (k)",
     ylab = "Average silhouette width")
best_k <- which.max(sil_width)
cat("최적의 k는:", best_k, "입니다.")

#2. 총비용(총 거리합, Total Cost)
costs <- c()
for (k in 2:10) {
  pam_fit <- pam(data, k)
  costs[k] <- pam_fit$objective[2]  # 전체 비용
}

plot(2:10, costs[2:10], type = "b",
     xlab = "Number of clusters (k)",
     ylab = "Total Cost (Objective)")

#3. Gap Statistic
set.seed(123)
gap_stat <- clusGap(data, FUN = pam, K.max = 10)
plot(gap_stat)

#──────────────────────────────────────────────────────────────────────────────────────────
# k-medoids 실행
kmed <- pam(data, k = 3)

# 군집 결과를 iris에 추가
iris$cluster <- as.factor(kmed$clustering)

# 길이 확인 (둘 다 150이어야 함)
length(iris$cluster)  # 150
nrow(iris)             # 150

# 군집별 평균 계산
aggregate(iris[, 1:4], by = list(Cluster = iris$cluster), FUN = mean)


#──────────────────────────────────────────────────────────────────────────────────────────
#기본 시각화 (plot(pam_object))
data <- iris[, 1:4]
kmed <- pam(data, k = 3)

# 기본 시각화
plot(kmed, main = "K-Medoids Clustering (PAM)")


#2 ggplot2 + PCA를 이용한 시각화
library(cluster)
library(ggplot2)

data <- iris[, 1:4]
kmed <- pam(data, k = 3)

# PCA로 차원 축소
pca <- prcomp(data, scale. = TRUE)
pca_df <- data.frame(pca$x[, 1:2], Cluster = as.factor(kmed$clustering))

# 시각화
ggplot(pca_df, aes(x = PC1, y = PC2, color = Cluster)) +
  geom_point(size = 3, alpha = 0.8) +
  labs(title = "K-Medoids Clustering (PCA visualization)") +
  theme_minimal()


#3 실제 변수 두 개만 사용한 2D 시각화
library(cluster)
library(ggplot2)

data <- iris[, 1:4]
kmed <- pam(data, k = 3)

iris$cluster <- as.factor(kmed$clustering)

ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, color = cluster)) +
  geom_point(size = 3, alpha = 0.8) +
  labs(title = "K-Medoids Clustering (2D View)") +
  theme_minimal()

#4. 실루엣 플롯만 따로 보기
library(cluster)

sil <- silhouette(kmed)
plot(sil, col = 1:3, border = NA)
